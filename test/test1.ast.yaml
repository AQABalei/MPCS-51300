externs:
  externs:
  - globid: getarg
    name: extern
    ret_type: int
    tdecls:
      name: tdecls
      types:
      - int
  - globid: getargf
    name: extern
    ret_type: float
    tdecls:
      name: tdecls
      types:
      - int
  name: externs
funcs:
  funcs:
  - blk:
      contents:
        name: stmts
        stmts:
        - cond:
            lhs:
              name: varval
              type: int
              var: $n
            name: binop
            op: lt
            rhs:
              name: lit
              type: int
              value: 2
            type: bool
          name: if
          stmt:
            cond:
              lhs:
                name: varval
                type: int
                var: $n
              name: binop
              op: eq
              rhs:
                name: lit
                type: int
                value: 0
              type: bool
            else_stmt:
              exp:
                name: lit
                type: int
                value: 1
              name: ret
              typeOfDeclaredVariable:
                $n: int
            name: if
            stmt:
              exp:
                name: lit
                type: int
                value: 0
              name: ret
              typeOfDeclaredVariable:
                $n: int
            typeOfDeclaredVariable:
              $n: int
        - exp:
            globid: fib
            name: funccall
            params:
              exps:
              - lhs:
                  name: varval
                  type: int
                  var: $n
                name: binop
                op: sub
                rhs:
                  name: lit
                  type: int
                  value: 1
                type: int
              name: exps
            type: int
          name: vardeclstmt
          vdecl:
            node: vdecl
            type: int
            var: $a
        - exp:
            globid: fib
            name: funccall
            params:
              exps:
              - lhs:
                  name: varval
                  type: int
                  var: $n
                name: binop
                op: sub
                rhs:
                  name: lit
                  type: int
                  value: 2
                type: int
              name: exps
            type: int
          name: vardeclstmt
          vdecl:
            node: vdecl
            type: int
            var: $b
        - exp:
            lhs:
              name: varval
              type: int
              var: $a
            name: binop
            op: add
            rhs:
              name: varval
              type: int
              var: $b
            type: int
          name: ret
      name: blk
      typeOfDeclaredVariable:
        $a: int
        $b: int
        $n: int
    globid: fib
    name: func
    ret_type: int
    vdecls:
      name: vdecls
      vars:
      - node: vdecl
        type: int
        var: $n
  - blk:
      contents:
        name: stmts
        stmts:
        - exp:
            exp:
              lhs:
                name: varval
                type: int
                var: $n
              name: binop
              op: add
              rhs:
                name: lit
                type: int
                value: 1
              type: int
            name: assign
            type: int
            var: $n
          name: expstmt
      name: blk
      typeOfDeclaredVariable:
        $n: int
    globid: inc
    name: func
    ret_type: void
    vdecls:
      name: vdecls
      vars:
      - node: vdecl
        type: ref int
        var: $n
  - blk:
      contents:
        name: stmts
        stmts:
        - cond:
            exp:
              lhs:
                name: varval
                type: int
                var: $n
              name: binop
              op: gt
              rhs:
                name: lit
                type: int
                value: 100
              type: bool
            name: uop
            op: not
            type: bool
          name: while
          stmt:
            contents:
              contents:
                name: stmts
                stmts:
                - exp:
                    exp:
                      lhs:
                        lhs:
                          name: varval
                          type: int
                          var: $n
                        name: binop
                        op: mul
                        rhs:
                          name: varval
                          type: int
                          var: $n
                        type: int
                      name: binop
                      op: sub
                      rhs:
                        name: lit
                        type: int
                        value: 2
                      type: int
                    name: assign
                    type: int
                    var: $n
                  name: expstmt
              name: blk
            name: blk
          typeOfDeclaredVariable:
            $n: int
      name: blk
      typeOfDeclaredVariable:
        $n: int
    globid: things
    name: func
    ret_type: void
    vdecls:
      name: vdecls
      vars:
      - node: vdecl
        type: ref int
        var: $n
  - blk:
      contents:
        name: stmts
        stmts:
        - name: printslit
          string: 'fib(5):'
        - exp:
            globid: fib
            name: funccall
            params:
              exps:
              - name: lit
                type: int
                value: 5
              name: exps
            type: int
          name: vardeclstmt
          vdecl:
            node: vdecl
            type: int
            var: $val
        - exp:
            name: varval
            type: int
            var: $val
          name: print
        - name: printslit
          string: 'fib(5)+1:'
        - exp:
            globid: inc
            name: funccall
            params:
              exps:
              - name: varval
                type: int
                var: $val
              name: exps
            type: void
          name: expstmt
        - exp:
            name: varval
            type: int
            var: $val
          name: print
        - name: printslit
          string: 'something else:'
        - exp:
            globid: things
            name: funccall
            params:
              exps:
              - name: varval
                type: int
                var: $val
              name: exps
            type: void
          name: expstmt
        - exp:
            name: varval
            type: int
            var: $val
          name: print
        - exp:
            name: lit
            type: int
            value: 0
          name: ret
      name: blk
      typeOfDeclaredVariable:
        $val: int
    globid: run
    name: func
    ret_type: int
  name: funcs
name: prog
